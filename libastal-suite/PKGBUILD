pkgname=("libastal-suite-git")
pkgver=r623.4c19d8d
pkgrel=1
pkgdesc="One library to rule them all, don't use it unless you know what you are doing"
arch=("x86_64")
license=(LGPL-2.1-only)
url="https://github.com/Aylur/astal"
makedepends=(
    "git"
    "gobject-introspection"
    "meson"
    "vala"
    "wayland"
    "wayland-protocols"
)
depends=(
    "glib2"
    "glibc"
    "gtk4"
    "gtk4-layer-shell"
    "gdk-pixbuf2"
    "wayland"
    "pam"
    "json-glib"
    "libcava"
    "libnm"
    "libwireplumber"
)
provides=(
    astal-mpris
    libastal-mpris
    libastal-mpris.so=0-64
    astal-bluetooth
    libastal-bluetooth
    libastal-bluetooth.so=0-64
    astal-notifd
    libastal-notifd
    libastal-notifd.so=0-64
    astal-auth
    libastal-auth
    libastal-auth.so=0-64
    astal-power-profiles
    libastal-power-profiles
    libastal-power-profiles.so=0-64
    astal-tray
    libastal-tray
    libastal-tray.so=0-64
    libastal-4
    libastal-4.so=4-64
    astal-io
    libastal-io
    libastal-io.so=0-64
    astal-hyprland
    libastal-hyprland
    libastal-hyprland.so=0-64
    astal-greet
    libastal-greet
    libastal-greet.so=0-64
    astal-wireplumber
    libastal-wireplumber
    libastal-wireplumber.so=0-64
    astal-river
    libastal-river
    libastal-river.so=0-64
    astal-network
    libastal-network
    libastal-network.so=0-64
    libastal
    libastal.so=3-64
    astal-apps
    libastal-apps
    libastal-apps.so=0-64
    astal-battery
    libastal-battery
    libastal-battery.so=0-64
    astal-cava
    libastal-cava
    libastal-cava.so=0-64
)
groups=("libastal")
source=("git+${url}.git")
sha256sums=("SKIP")

pkgver() {
    cd astal
    printf "r%s.%s" "$(git rev-list --count HEAD)" "$(git rev-parse --short=7 HEAD)"
}

lib_dir="astal/lib/"

build() {
    cd $lib_dir/astal/io
    arch-meson --prefix /usr build
    meson install -C build

}

package() {
    astal4
    apps
    auth
    battery
    bluetooth
    cava
    greet
    hyprland
    mpris
    network
    notifd
    powerprofiles
    river
    tray
    wireplumber
}

astal4() {
    pushd "$lib_dir/astal/gtk4"
    arch-meson --prefix /usr build
    meson install -C build
    popd
}
apps() {
    pushd "$lib_dir/apps"
    arch-meson --prefix /usr build
    meson install -C build
    popd
}
auth() {
    pushd "$lib_dir/auth"
    arch-meson --prefix /usr build
    meson install -C build
    popd
}

battery() {
    pushd "$lib_dir/battery"
    arch-meson --prefix /usr build
    meson install -C build
    popd
}

bluetooth() {
    pushd "$lib_dir/bluetooth"
    arch-meson --prefix /usr build
    meson install -C build
    popd
}

cava() {
    pushd "$lib_dir/cava"
    arch-meson --prefix /usr build
    meson install -C build
    popd
}

greet() {
    pushd "$lib_dir/greet"
    arch-meson --prefix /usr build
    meson install -C build
    popd
}

hyprland() {
    pushd "$lib_dir/hyprland"
    arch-meson --prefix /usr build
    meson install -C build
    popd
}

mpris() {
    pushd "$lib_dir/mpris"
    arch-meson --prefix /usr build
    meson install -C build
    popd
}

network() {
    pushd "$lib_dir/network"
    arch-meson --prefix /usr build
    meson install -C build
    popd
}

notifd() {
    pushd "$lib_dir/notifd"
    arch-meson --prefix /usr build
    meson install -C build
    popd
}

powerprofiles() {
    pushd "$lib_dir/powerprofiles"
    arch-meson --prefix /usr build
    meson install -C build
    popd
}

river() {
    pushd "$lib_dir/river"
    arch-meson --prefix /usr build
    meson install -C build
    popd
}

tray() {
    pushd "$lib_dir/tray"
    arch-meson --prefix /usr build
    meson install -C build
    popd
}

wireplumber() {
    pushd "$lib_dir/wireplumber"
    arch-meson --prefix /usr build
    meson install -C build
    popd
}
